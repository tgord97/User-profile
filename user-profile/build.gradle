plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'checkstyle'
	id 'maven-publish'
}

group = 'com.iprody.user-profile'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

publishing {
	repositories {
		maven {
			name = "GitHubPackages"
			url = "https://maven.pkg.github.com/iPrody/iPrody-Devs-Gr0000000006-user-profile"
			credentials {
				username = System.getenv("GITHUB_USERNAME")
				password = System.getenv("GITHUB_TOKEN")
			}
		}
	}
	publications {
		github(MavenPublication) {
			from components.java
			versionMapping {
				allVariants {
					fromResolutionResult()
				}
			}
		}
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.flywaydb:flyway-core'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation group: 'junit', name: 'junit'

	implementation(platform("io.micrometer:micrometer-tracing-bom:1.0.0"))
	implementation("io.micrometer:micrometer-tracing")
	implementation("io.micrometer:micrometer-tracing-bridge-otel")

	implementation("io.opentelemetry:opentelemetry-exporter-zipkin")

	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'

}


test {
	useJUnit();
}
